import java.util.Arrays;
import java.util.Scanner;


/**
 * SimpleCalendar application
 * <p>
 * The SimpleCalendar application takes a date in the form DD/MM/YYYY as an
 * input and, using Zellers congruence, first prints out a simple calendar
 * for the given month
 * <p>
 * @author Richard Archbold richarda@fb.com D04107657
 */
public class SimpleCalendar {

	boolean DEBUG = true;
	int day, month, year;
	String weekday;
	String[] weekdays  = {"Sunday", "Monday", "Tuesday", "Wednesday",
			 "Thursday", "Friday", "Saturday", "Sunday"};
	
	/**
	 * Constructor whereby an initial date string can be specified. There is
	 * no validation on the date string yet. 
	 * @param String initialDate
	 */
	SimpleCalendar(String initialDate) {
		Scanner tokens = new Scanner(initialDate).useDelimiter("/");
		
		this.day = tokens.nextInt();
		this.month = tokens.nextInt();
		this.year = tokens.nextInt();
		this.weekday = this.weekday();
		
		if (DEBUG) {
			System.out.println("DEBUG: day     = " + day); 
			System.out.println("DEBUG: month   = " + month); 
			System.out.println("DEBUG: year    = " + year); 
			System.out.println("DEBUG: weekday = " + this.weekday);
		}
			
		tokens.close();
	}
	
	
	String weekday() {
		int Z = this.zeller(this.day, this.month, this.year);
		return weekdays[Z];
	}
	
	
	/**
	 * Using Zellers Congruence, returns the weekday of the this.date
	 * <p>
	 * Eg: for 10/12/1985
	 * D = 10 <br>
	 * M = 10 ((month -2) % 12) <br>
	 * y = 1985 <br>
	 * Y = 85 (y % 100) <br>
	 * C = 19 (Y - y) / 100 <br>
	 * Z = ( [2.6M-0.2] + D + Y + [ Y/4] + [ C/4] - 2C) mod 7 <br>
	 * 
	 * @return String weekday
	 */
	int zeller (int dayx, int monthx, int yearx) {
		
		int D = dayx;
		int M = (monthx - 2) % 12;
		int Y = yearx % 100;
		int C = (yearx - Y) / 100;
		int Z = (int) ((Math.floor(2.6*M - 0.2) + D + Y + Math.floor(Y/4) + 
				        Math.floor(C/4) - 2*C) % 7);
		return Z;
	}
	
	/**
	 * Returns the month string, based off the month integer passed to it.
	 * 
	 * @param num Month Number 
	 * @return A string containing the month name 
	 */
	String monthString (int num) {
		String[] mons = {"January", "February", "March", "April", "May", "June", 
						 "July", "August", "September", "October", "November", 
						 "December"};
		return mons[num-1];
	}
	
	int getDaysInMonth () {
		
		int[] mons1 = {9, 4, 6, 11};
		
		if (Arrays.asList(mons1).contains(this.month)) {
			return 30;
		} else if (this.month == 2 ) {
			if (this.year % 4 == 0) {
				return 29;
			} else {
				return 28;
			}
		} else {
			return 31;
		}
	}
	
	void calendar() {		
		/*
		 * get zellers number for 1st of the month.
		 * this will give us the starting position of the month
		 * start_weekday = zeller(date) // 5
		 * 
		 * then get the total number of days in the month
		 * total days = getDays(date)   // 31
		 * 
		 * figure out the total number of days in the matrix
		 * we need to print. this will be equal to zellers number for the first
		 * day + the amount of days in the month, rounded up to the nearest 
		 * multiple of 7. we need to round up because we want to print out the 
		 * full grid 
		 * 
		 * iterate through the whole array size, using "i"
		 *
		 *	i < Z, print "|     "
		 *  i > Z, i <= Z + daysInMonth, printf "|%-5d"
		 */
		
		int firstZeller = this.zeller(1, this.month, this.year);
		System.out.println("DEBUG: firstZ  = " + firstZeller);
		
		System.out.println(this.monthString(this.month) + " " + this.year);
		System.out.println("-------------------------------------------");
		System.out.println("| Sun | Mon | Tue | Wed | Thu | Fri | Sat |");
		
		int daysInMonth = this.getDaysInMonth();
		int totalArraySize = firstZeller + daysInMonth + 
							 (7 - ((firstZeller + daysInMonth) % 7));

		String theLine = "";
		
		for (int i = 1; i <= totalArraySize; i++) {
			if (i <= firstZeller) {
				
				theLine += "|     ";
			
			} else if ( (i > firstZeller) && (i <= firstZeller + daysInMonth)) {
			
				String temp = String.format("|%5d", (i - firstZeller));
				theLine += temp;
			
			} else {
				
				theLine += "|     ";
				
			}
			
			if (i % 7 == 0) {
				theLine += "|";
				System.out.println(theLine);
				theLine = "";
			}
		}
		System.out.println("-------------------------------------------");
		
	}
	
	/**
	 * Convert a date of the format DD/MM/YYYY to a longer, more verbose 
	 * format.
	 * 
	 * @return a String representation of the date, in the format 
	 * Monday 17th October 2011 or Friday 17th April 1998
	 */
	String dateString (int dayx, int monthx, int yearx) {
		
	}
	
	
	public static void main(String[] args) {
		
		SimpleCalendar myCal = new SimpleCalendar("28/10/2013");
		myCal.dateString(myCal.day, myCal.month, myCal.year);
		myCal.calendar();
	}

}
